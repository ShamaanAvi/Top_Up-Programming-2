-- Create Database
CREATE DATABASE PizzaOrderingSystemDB;
GO

-- Use the Database
USE PizzaOrderingSystemDB;
GO


CREATE TABLE Users (
    UserId INT IDENTITY(1,1) PRIMARY KEY,
    Username NVARCHAR(50) NOT NULL,
    Password NVARCHAR(50) NOT NULL,
    Email NVARCHAR(100) NOT NULL,
    PhoneNumber NVARCHAR(15),
    LoyaltyPoints INT DEFAULT 0
);

CREATE TABLE CrustTypes (
    CrustTypeId INT IDENTITY(1,1) PRIMARY KEY,
    Name NVARCHAR(50) NOT NULL,
    Price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE SauceTypes (
    SauceTypeId INT IDENTITY(1,1) PRIMARY KEY,
    Name NVARCHAR(50) NOT NULL,
    Price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE CheeseTypes (
    CheeseTypeId INT IDENTITY(1,1) PRIMARY KEY,
    Name NVARCHAR(50) NOT NULL,
    Price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE CustomPizzas (
    CustomPizzaId INT IDENTITY(1,1) PRIMARY KEY,
    UserId INT NOT NULL FOREIGN KEY REFERENCES Users(UserId),
    Name NVARCHAR(100) NULL,
    CrustTypeId INT NOT NULL FOREIGN KEY REFERENCES CrustTypes(CrustTypeId),
    SauceTypeId INT NOT NULL FOREIGN KEY REFERENCES SauceTypes(SauceTypeId),
    CheeseTypeId INT NOT NULL FOREIGN KEY REFERENCES CheeseTypes(CheeseTypeId),
    BasePrice DECIMAL(10, 2),
    CreatedDate DATETIME DEFAULT GETDATE()
);

-- Create Pizzas Table
CREATE TABLE Pizzas (
    PizzaId INT IDENTITY(1,1) PRIMARY KEY,
    Name NVARCHAR(100),
    CrustTypeId INT NOT NULL FOREIGN KEY REFERENCES CrustTypes(CrustTypeId),
    SauceTypeId INT NOT NULL FOREIGN KEY REFERENCES SauceTypes(SauceTypeId),
    CheeseTypeId INT NOT NULL FOREIGN KEY REFERENCES CheeseTypes(CheeseTypeId),
    BasePrice DECIMAL(10, 2)
);

-- Create Toppings Table
CREATE TABLE Toppings (
    ToppingId INT IDENTITY(1,1) PRIMARY KEY,
    Name NVARCHAR(50) NOT NULL,
    Price DECIMAL(10, 2) NOT NULL
);

-- Create PizzaToppings Mapping Table
CREATE TABLE PizzaToppings (
    PizzaToppingId INT IDENTITY(1,1) PRIMARY KEY,
    PizzaId INT NULL FOREIGN KEY REFERENCES Pizzas(PizzaId),
    CustomPizzaId INT NULL FOREIGN KEY REFERENCES CustomPizzas(CustomPizzaId),
    ToppingId INT NOT NULL FOREIGN KEY REFERENCES Toppings(ToppingId),
    CHECK ((PizzaId IS NOT NULL AND CustomPizzaId IS NULL) OR (PizzaId IS NULL AND CustomPizzaId IS NOT NULL))
);

-- Create Orders Table
CREATE TABLE Orders (
    OrderId INT IDENTITY(1,1) PRIMARY KEY,
    UserId INT NOT NULL FOREIGN KEY REFERENCES Users(UserId),
    OrderDate DATETIME DEFAULT GETDATE(),
    DeliveryStatus NVARCHAR(20) CHECK (DeliveryStatus IN ('Placed', 'Preparing', 'Out for Delivery', 'Delivered')),
    PickupStatus NVARCHAR(20) CHECK (PickupStatus IN ('Placed', 'Preparing', 'Ready for Pickup', 'Picked Up')),
    DeliveryAddress NVARCHAR(255),
    IsDelivery BIT NOT NULL,
    TotalPrice DECIMAL(10, 2),
    CHECK (
        (IsDelivery = 1 AND DeliveryStatus IS NOT NULL AND PickupStatus IS NULL) OR
        (IsDelivery = 0 AND PickupStatus IS NOT NULL AND DeliveryStatus IS NULL)
    )
);

-- Create OrderDetails Table
CREATE TABLE OrderDetails (
    OrderDetailId INT IDENTITY(1,1) PRIMARY KEY,
    OrderId INT NOT NULL FOREIGN KEY REFERENCES Orders(OrderId),
    PizzaId INT NULL FOREIGN KEY REFERENCES Pizzas(PizzaId),
    CustomPizzaId INT NULL FOREIGN KEY REFERENCES CustomPizzas(CustomPizzaId),
    Quantity INT NOT NULL CHECK (Quantity > 0),
    Price DECIMAL(10, 2) NOT NULL,
    CHECK ((PizzaId IS NOT NULL AND CustomPizzaId IS NULL) OR (PizzaId IS NULL AND CustomPizzaId IS NOT NULL))
);

-- Create Feedback Table
CREATE TABLE Feedback (
    FeedbackId INT IDENTITY(1,1) PRIMARY KEY,
    OrderId INT NOT NULL FOREIGN KEY REFERENCES Orders(OrderId),
    Rating INT CHECK (Rating BETWEEN 1 AND 5),
    Comments NVARCHAR(MAX)
);

-- Create Promotions Table
CREATE TABLE Promotions (
    PromotionId INT IDENTITY(1,1) PRIMARY KEY,
    Name NVARCHAR(100),
    ImagePath NVARCHAR(255),
    Description NVARCHAR(MAX),
    DiscountPercentage DECIMAL(5, 2),
    StartDate DATE NOT NULL,
    EndDate DATE NOT NULL
);

CREATE TABLE Favorites (
    FavoriteId INT IDENTITY(1,1) PRIMARY KEY,
    UserId INT NOT NULL FOREIGN KEY REFERENCES Users(UserId),
    PizzaId INT NULL FOREIGN KEY REFERENCES Pizzas(PizzaId),
    CustomPizzaId INT NULL FOREIGN KEY REFERENCES CustomPizzas(CustomPizzaId),
    CreatedDate DATETIME DEFAULT GETDATE(),
    CHECK ((PizzaId IS NOT NULL AND CustomPizzaId IS NULL) OR (PizzaId IS NULL AND CustomPizzaId IS NOT NULL))
);

CREATE TABLE ShoppingCart (
    CartItemId INT IDENTITY(1,1) PRIMARY KEY,
    UserId INT NOT NULL FOREIGN KEY REFERENCES Users(UserId),
    PizzaId INT NULL FOREIGN KEY REFERENCES Pizzas(PizzaId),
    CustomPizzaId INT NULL FOREIGN KEY REFERENCES CustomPizzas(CustomPizzaId),
    Quantity INT NOT NULL CHECK (Quantity > 0),
    Price DECIMAL(10, 2) NOT NULL,
    CHECK ((PizzaId IS NOT NULL AND CustomPizzaId IS NULL) OR (PizzaId IS NULL AND CustomPizzaId IS NOT NULL))
);
GO